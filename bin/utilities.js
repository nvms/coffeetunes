// Generated by IcedCoffeeScript 108.0.11
(function() {
  var centrify, left_pad, longest_str_in_arr, tidy;

  left_pad = function(number, target_length) {
    var result;
    result = number + '';
    while (result.length !== target_length) {
      result = '0' + result;
    }
    return result;
  };

  tidy = function(field, value) {
    var a, arr, b, minutes, raw, seconds, tup, _i, _len;
    raw = '';
    if (field === 'duration') {
      minutes = Math.floor(value / 60);
      seconds = left_pad(value - (minutes * 60), 2);
      raw = "" + minutes + ":" + seconds;
    } else if (field === 'song' || field === 'singer') {
      raw = value;
      arr = [['&amp;', '&'], ['&amp;amp;', '&'], ['&#039;', "'"], ['&amp;#039;', "'"]];
      for (_i = 0, _len = arr.length; _i < _len; _i++) {
        tup = arr[_i];
        a = tup[0], b = tup[1];
        raw = raw.replace(a, b);
      }
    } else {
      raw = value;
    }
    return raw;
  };

  longest_str_in_arr = function(arr) {
    var i, longest;
    longest = 0;
    i = 0;
    while (i < arr.length) {
      if (longest < arr[i].length) {
        longest = arr[i].length;
      }
      i++;
    }
    return longest;
  };

  centrify = function(string) {
    var indent, line, lines, max_line_length, newlines, number_of_lines, printlines, x, y, _i, _len;
    lines = string.split('x');
    number_of_lines = lines.length;
    max_line_length = longest_str_in_arr(lines);
    x = process.stdout.columns;
    y = process.stdout.rows;
    indent = (x - max_line_length) / 2;
    newlines = (y / 2) - (number_of_lines / 2);
    printlines = '';
    for (_i = 0, _len = lines.length; _i < _len; _i++) {
      line = lines[_i];
      printlines += ((function() {
        var _j, _results;
        _results = [];
        for (_j = 1; 1 <= indent ? _j <= indent : _j >= indent; 1 <= indent ? _j++ : _j--) {
          _results.push(' ');
        }
        return _results;
      })()) + line;
    }
    return console.log(printlines);
  };

  exports.left_pad = left_pad;

  exports.tidy = tidy;

  exports.centrify = centrify;

}).call(this);
